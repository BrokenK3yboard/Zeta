import groovy.json.JsonOutput
import groovy.json.JsonSlurper

architectury {
    common(enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/zeta.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    // Mixin Extra's
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))
}

processResources {
    // Don't add Development or To-do files in final jar
    exclude("**/*.bbmodel", "**/*.lnk", "**/*.md", "**/*.txt", "**/*.blend", "**/*.blend1",
            "**/PlatformMethods.class")

    // Minify all .json files in built jars
    doLast {
        fileTree(dir: processResources.outputs.files.asPath, include: '**/*.json').each {
            it.text = JsonOutput.toJson(new JsonSlurper().parse(it))
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            group = "$maven_group-$project.name"
            artifactId = "$archives_base_name-$project.name-$minecraft_version"
        }
    }

    repositories {
        maven {
            name = "IThundxrMaven$project.name"
            url = "https://maven.ithundxr.dev/hidden"
            credentials {
                username = IThundxrMavenUsername
                password = IThundxrMavenPassword
            }
        }
    }
}